version: 2.1

commands:
  connect-remote:
    steps:
      - add_ssh_keys:
          fingerprints:
            - SHA256:O76UEgd4JGePYnipLYEhyK0UXrsuT1cbgZLcobR3GIM
      - run:
          name: Connect to remote machine
          command: |
            ssh -o StrictHostKeyChecking=no root@45.61.58.231 "exit"
  create-remote-context:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:O76UEgd4JGePYnipLYEhyK0UXrsuT1cbgZLcobR3GIM"
      - run:
          name: Check and create Docker context
          command: |
            docker context create remote --docker "host=ssh://root@45.61.58.231"
  remove-existing-container:
    parameters:
      container-type:
        type: enum
        enum: ["staging","production"]
    steps:
      - run:
          name: If an image and container already exists delete them first
          command: |
            docker --context remote container rm -f askturing-<< parameters.container-type >>-container
  build-and-run-image:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:O76UEgd4JGePYnipLYEhyK0UXrsuT1cbgZLcobR3GIM"
      - checkout
      - run:
          name: Build a docker image from Dockerfile
          command: |
            docker --context remote build -t askturing-image:latest .
          when: always

  start-server:
    parameters:
      server-type:
        type: enum
        enum: ["staging", "production"]
        default: staging
        description: We will be running 2 different types of servers
      server-port:
        type: integer
        default: 3000
        description: Staging server will use port 80 and production will use 3000
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:O76UEgd4JGePYnipLYEhyK0UXrsuT1cbgZLcobR3GIM"
      - run:
          name: Start the server on the remote machine
          command: |
            docker --context remote run -d -e PORT=<< parameters.server-port >> --name askturing-<< parameters.server-type >>-container \
            -p << parameters.server-port >>:<< parameters.server-port >> askturing-image:latest
          when: always

jobs:
  Deploy-Staging-Server:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - connect-remote
      - create-remote-context
      - remove-existing-container:
          container-type: "staging"
      - build-and-run-image
      - start-server:
          server-type: "staging"
          server-port: 80

  Deploy-Production-Server:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - connect-remote
      - create-remote-context
      - remove-existing-container:
          container-type: "production"
      - build-and-run-image
      - start-server:
          server-type: "production"
          server-port: 3000

workflows:
  askturing-deployment-workflow:
    jobs:
      - Deploy-Staging-Server
      - Deploy-Production-Server:
          type: approval
          requires:
            - Deploy-Staging-Server
